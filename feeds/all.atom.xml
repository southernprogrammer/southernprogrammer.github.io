<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bryan Price</title><link href="http://bryanprice.net/" rel="alternate"></link><link href="http://bryanprice.net/feeds/all.atom.xml" rel="self"></link><id>http://bryanprice.net/</id><updated>2016-05-02T11:23:00-05:00</updated><entry><title>Python Partials</title><link href="http://bryanprice.net/python-partials.html" rel="alternate"></link><published>2016-05-02T11:23:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2016-05-02:python-partials.html</id><summary type="html">&lt;p&gt;Have you ever heard of the concept of currying? If not, I'm about to blow your mind. Let's say that you have
a method you want to use and it takes two parameters. The only problem is that you only have one parameter at the moment.
You will have the next parameter later. You can create an intermediate method from the other method that takes one
parameter and then use that method at the time of your choosing. In Python, this is achieved by using a partial.&lt;/p&gt;
&lt;p&gt;Let's say that you ran os.listdir, this method returns the unqualified file names inside of a folder. The only problem
is that I want the file names fully qualified with it's entire path. So I should use os.path.join on each of the items.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;
&lt;span class="n"&gt;folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/your/path/to/whatever&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;folder_join&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.jpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;folder_join&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If one.jpg, two.jpg, and three.jpg are in our folder, we would get this output =&amp;gt;
['/your/path/to/whatever/one.jpg', '/your/path/to/whatever/two.jpg', '/your/path/to/whatever/three.jpg']&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>Python Magic Functions</title><link href="http://bryanprice.net/python-magic-functions.html" rel="alternate"></link><published>2015-05-07T21:33:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2015-05-07:python-magic-functions.html</id><summary type="html">&lt;p&gt;Python has many magic functions that will allow your classes to do all
kinds of fun stuff. You may want your object to act like a dictionary,
or a list, you may want to make sure str() prints your object a certain
way, or you may want to override operators. You can tell your object how
to act with the &amp;quot;in&amp;quot; clause and how to deconstruct when using the &amp;quot;with&amp;quot;
clause. There are so many other magic methods as well.&lt;/p&gt;
&lt;p&gt;Here's a simple example of using magic functions&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__eq__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__gt__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__ge__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__lt__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
             &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
         &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__le__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__add__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__sub__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__mul__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__div__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__truediv__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__div__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__int__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__long__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;long&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__float__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# -2&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 6&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# .5&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# 8&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# True&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# False&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# True&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# True&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can test this example with &lt;a class="reference external" href="http://repl.it/nCh"&gt;repl.it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But look at what we can do now, we can do math backwards! Obviously
there are several other mathematical functions that should probably be
implemented as well like square root and such, but this is a nice start.&lt;/p&gt;
&lt;p&gt;So let's look at __add__.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__add__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;OppositeMath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a + b is run &lt;strong&gt;a&lt;/strong&gt; will be the &lt;strong&gt;self&lt;/strong&gt; that comes into the
__add__ method and &lt;strong&gt;b&lt;/strong&gt; will be &lt;strong&gt;num&lt;/strong&gt;. So the left hand side must
always be an OppositeMath. I check to see if the right hand side is an
OppositeMath, and if it is I do math on the OppositeMath's num variable.
I also return an OppositeMath object because we may want to do more
opposite math after returning the value! Every other magic function is
pretty similar for this example. I also implement str, float, int, and
long to tell the interpreter what to do if someone tries to cast an
OppositeMath to those types.&lt;/p&gt;
&lt;p&gt;OppositeMath itself isn't very useful, but you could do something like
implement an event dispatcher that uses the magic functions iadd and
isub to take advantage of += and -=. You could have those operators add
and remove events.&lt;/p&gt;
&lt;p&gt;Here's a good resource for more magic methods:
&lt;a class="reference external" href="http://www.rafekettler.com/magicmethods.html"&gt;http://www.rafekettler.com/magicmethods.html&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>Python List Comprehension and Sets</title><link href="http://bryanprice.net/python-list-comprehension-and-sets.html" rel="alternate"></link><published>2015-01-29T05:18:00-06:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2015-01-29:python-list-comprehension-and-sets.html</id><summary type="html">&lt;p&gt;I work for a company that does GIS work, and over the past week or so
I've been working on a script that does a lot of different things. One
of it's subroutines deletes data from Oracle.&lt;/p&gt;
&lt;p&gt;First I was told (or I interpreted) it was safe to delete everything
from the Oracle connection. So this is similar to my first stab at the
code that deletes data from Oracle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;arcpy&lt;/span&gt;

&lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;workspace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;r&amp;quot;c:\oracle_connection.sde&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# file that holds all the connection info&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListTables&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListFeatureClasses&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListDatasets&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Delete_management&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One of the neat things about python is the ease at which lists can be
pulled together. Simply use the + operator!&lt;/p&gt;
&lt;p&gt;The code above lists all tables, feature classes, and datasets. If
you're unfamiliar with ArcGIS, a feature class is simply a table that
has a shape related to each row. A dataset is a container for feature
classes.&lt;/p&gt;
&lt;p&gt;When I ran the above code in my test environment, data was deleted from
some tables that were owned by a different user than what was specified
in the sde connection file. Apparently when tables, feature classes and
datasets are listed it's not just limited to the current user. This
could be particularly problematic if the connection user has permissions
to delete all tables. My solution was to only list tables that started
with the database user followed by a period.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;arcpy&lt;/span&gt;

&lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;workspace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;r&amp;quot;c:\oracle_connection.sde&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# file that holds all the connection info&lt;/span&gt;
&lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;workspace&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;desc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connectionProperties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;tables&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListTables&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;feature_classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListFeatureClasses&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;datasets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListDatasets&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tables&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;feature_classes&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Delete_management&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Did you see that? [x.upper() for x in arcpy.ListTables() if
x.upper().startswith(dbo + &amp;quot;.&amp;quot;)]&lt;/div&gt;
&lt;div class="line"&gt;This is what is known as a list comprehension. It's similar to C#'s
LINQ. If this were a C# list, this would be written as var tables =
arcpy.ListTables().Select(x=&amp;gt;x.ToUpper()).Where(x=&amp;gt;x != dbo)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So what now? Well as it turns out we only wanted to delete pre-approved
tables and feature classes and we were not concerned with datasets. So I
added the tables and feature classes into configuration and I did
intersections with the lists.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;arcpy&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tables&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feature_classes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;@param tables: list of unqualified tables that we will drop&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;@param feature_classes: list of unqualified feature classes that we will drop&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;@type tables: [str]&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;@type feature_classes: [str]&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;workspace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;r&amp;quot;c:\oracle_connection.sde&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# file that holds all the connection info&lt;/span&gt;
    &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;workspace&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;desc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connectionProperties&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;deletable_tables&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tables&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;deletable_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;feature_classes&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;tables_in_db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListTables&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="n"&gt;features_in_db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListFeatureClasses&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dbo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="c1"&gt;# if the table is in the list of preapproved tables&lt;/span&gt;
    &lt;span class="c1"&gt;# and the table actually exists&lt;/span&gt;
    &lt;span class="c1"&gt;# we want to delete it&lt;/span&gt;
    &lt;span class="n"&gt;tables_to_delete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deletable_tables&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tables_in_db&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;features_to_delete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deletable_features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features_in_db&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tables_to_delete&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;features_to_delete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;arcpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Delete_management&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So there you have it a real world problem solved by list comprehensions
and sets.&lt;/p&gt;
</summary><category term="Python"></category></entry><entry><title>IntelliJ and Android</title><link href="http://bryanprice.net/intellij-and-android.html" rel="alternate"></link><published>2013-03-14T12:39:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2013-03-14:intellij-and-android.html</id><summary type="html">&lt;p&gt;I've been enjoying IntelliJ for android development. Here's a video on
setting up a project. At some point I'd like to do a video talking about
some gotchas that I've found. Until then, just enjoy this:&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/y-WLXExDcTg" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;</summary></entry><entry><title>The Story of Node.js</title><link href="http://bryanprice.net/the-story-of-node-js.html" rel="alternate"></link><published>2013-02-28T22:34:00-06:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2013-02-28:the-story-of-node-js.html</id><summary type="html">&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/SAc0vQCC6UQ" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;</summary><category term="Video"></category></entry><entry><title>WPF Uppercase AutoComplete</title><link href="http://bryanprice.net/wpf-uppercase-autocomplete.html" rel="alternate"></link><published>2012-08-10T20:39:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2012-08-10:wpf-uppercase-autocomplete.html</id><summary type="html">&lt;p&gt;One of our clients wants uppercase characters in all of there inputs.
Unfortunately System.Windows.Controls.AutoCompleteBox doesn't support
the CharacterCasing option that is on a standard text box. My solution
is to simply inherit from AutoCompleteBox and after the template has
been applied grab the text box that is in the control and set it's
CharacterCasing to uppercase.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UppercaseAutoComplete&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;AutoCompleteBox&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;OnApplyTemplate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OnApplyTemplate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;TextBox&lt;/span&gt; &lt;span class="n"&gt;actualTextBox&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FindName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;TextBox&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;actualTextBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharacterCasing&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CharacterCasing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Upper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary></entry><entry><title>Give Camp Birmingham</title><link href="http://bryanprice.net/give-camp-birmingham.html" rel="alternate"></link><published>2011-01-29T17:19:00-06:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2011-01-29:give-camp-birmingham.html</id><summary type="html">&lt;p&gt;Recently I went to Give Camp in Birmingham.&amp;nbsp; It’s an event sponsored by
Microsoft for developers to join together to help non-profits and
charities.&amp;nbsp; Developers spend the weekend developing software or creating
web sites that the organization needs.&amp;nbsp; It was a lot of fun and here is
a promotional video.&lt;/p&gt;
&lt;iframe src="http://player.vimeo.com/video/19132894?color=ffffff" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;
&lt;/iframe&gt;&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/19132894"&gt;Give Camp Birmingham | Promo&lt;/a&gt; from
&lt;a class="reference external" href="http://vimeo.com/user445453"&gt;Hampton Road Studios&lt;/a&gt; on
&lt;a class="reference external" href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Charity"></category><category term="Give Camp"></category><category term="Video"></category></entry><entry><title>Mono Zeroconf on Windows</title><link href="http://bryanprice.net/mono-zeroconf-on-windows.html" rel="alternate"></link><published>2011-01-29T10:04:00-06:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2011-01-29:mono-zeroconf-on-windows.html</id><summary type="html">&lt;p&gt;If you know anything about my classroom control system that I built, you
know that the project requires Bonjour.&amp;nbsp; This is the technology Apple
uses to help you share your music on a network.&amp;nbsp; Computers discover one
another by publishing their address on a multicast port.&amp;nbsp; Because the
port is multicast the information gets sent to all computers on the
network (you must have a multicast router).&amp;nbsp; I used a library in java
called Bonaha that abstracted away a lot of the complexities of Apple’s
Bonjour SDK.&lt;/p&gt;
&lt;p&gt;I wanted a way to do the same thing in .NET because, well frankly I’d
like to make my classroom control system a more cohesive piece of
software and not the kludge that it is (in 2 different languages Java
and .NET and pieced together with Elmer’s Glue©).&lt;/p&gt;
&lt;p&gt;The obvious choice to keep up with the network state is Mono.Zeroconf.
It’s a project that’s separate from the main Mono repository itself.&amp;nbsp; I
expected this software to work out of the gate.&amp;nbsp; It may work fine on
Linux using the Avahi provider; but with the Bonjour Provider on Windows
I had to do some modifications of the source to get it to run.&amp;nbsp; Luckily
there were others online that had already found the problems for me (but
the forum posts were in 2 different places and a little difficult to
find.), so for your convenience I am combining those bits of information
in this blog post.&lt;/p&gt;
&lt;p&gt;First you’ll need to do as
&lt;a class="reference external" href="http://stackoverflow.com/users/313673/frankenspank"&gt;Frankenspank&lt;/a&gt;
suggested on
&lt;a class="reference external" href="http://stackoverflow.com/questions/599846/how-to-register-a-service-with-mono-zeroconf"&gt;this&lt;/a&gt;
StackOverflow post.&amp;nbsp; You’ll need to change the &lt;strong&gt;UPort&lt;/strong&gt; Setter in
&lt;strong&gt;Service.cs&lt;/strong&gt; file (in the Bonjour Provider Project) to be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="n"&gt;ushort&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;IPAddress&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;HostToNetworkOrder&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next you’ll need to change the &lt;strong&gt;OnResolveReply&lt;/strong&gt; method in the
&lt;strong&gt;BrowseService.cs&lt;/strong&gt; file (again in the Bonjour Provider Project).&lt;/p&gt;
&lt;p&gt;You’ll need to change the second if statement from&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AddressProtocol&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;AddressProtocol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Any&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
    &lt;span class="n"&gt;AddressProtocol&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;AddressProtocol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;IPv6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AddressProtocol&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;AddressProtocol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;IPv6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term=".NET"></category><category term="Apple"></category><category term="Bonjour"></category><category term="CCS"></category><category term="Java"></category><category term="Mono"></category><category term="Windows"></category><category term="Zeroconf"></category></entry><entry><title>Media Monkey PS3 Media Server Plugin</title><link href="http://bryanprice.net/media-monkey-ps3-media-server-plugin.html" rel="alternate"></link><published>2010-12-04T11:12:00-06:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2010-12-04:media-monkey-ps3-media-server-plugin.html</id><summary type="html">&lt;p&gt;You may have heard me talk about &lt;a class="reference external" href="http://www.mediamonkey.com/"&gt;Media
Monkey&lt;/a&gt; before.&amp;nbsp; If not, it is my
favorite music player.&amp;nbsp; It’s based on the winamp engine but is very
powerful for handling mp3 tags, converting music formats, monitor and
import music (great for amazon mp3 stuff) and has integration with a few
online stores.&amp;nbsp; There is a free version, but the gold version is only 40
bucks and well worth it if you want a great way to manage your music.&lt;/p&gt;
&lt;p&gt;You may also be aware that &lt;a class="reference external" href="http://ps3mediaserver.blogspot.com/"&gt;PS3 Media
Server&lt;/a&gt; is a pretty awesome way
to get media content onto a ps3 or other upnp/dlna device.&amp;nbsp; PS3 Media
Server’s music streaming is very limited.&amp;nbsp; It just shows the music in a
folder structure.&amp;nbsp; I did a quick google search and found exactly what I
was looking for.&amp;nbsp; Someone has written a plugin to access your media
monkey library via the PS3 Media Server.&amp;nbsp; I now have access to my media
monkey library on my ps3 (playlists included!).&lt;/p&gt;
&lt;p&gt;Details can be found
&lt;a class="reference external" href="http://sites.google.com/site/elbotijomm/home/ps3mediaserver-mods"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>SageTV Rename</title><link href="http://bryanprice.net/sagetv-rename.html" rel="alternate"></link><published>2010-06-06T15:40:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2010-06-06:sagetv-rename.html</id><summary type="html">&lt;p&gt;Many of you may remember that I wrote a script for BeyondTV (&lt;a class="reference external" href="pages/coding-projects.html"&gt;BeyondTV
Renamer&lt;/a&gt;) that utilized a
command line tool that someone had written to create an XML file giving
detailed information about the given file.&amp;nbsp; My script compared the
airdate from this dumped XML file with airdates of matching shows on
TVRage.com to rename the files in such a way that XBMC or Boxee could
read the file and get the metadata (like show description and images).&lt;/p&gt;
&lt;p&gt;Well today I’m releasing a script that I wrote that does something
similar for SageTV.&amp;nbsp; Technically speaking, it does not actually rename
the file.&amp;nbsp; It creates symlinks to the files named in such a way that
XBMC or Boxee can read the files and pickup the metadata.&amp;nbsp; And instead
of needing the command line tool, you need the SageTV Web Interface that
was written by Neilm.&amp;nbsp; By creating symlinks, it allows for only 1 true
copy of the file to exist and for the show to remain in SageTV and in
Boxee or XBMC.&lt;/p&gt;
&lt;p&gt;Original &lt;a class="reference external" href="https://github.com/southernprogrammer/BTVRenamer"&gt;BeyondTV
Renamer&lt;/a&gt; | New &lt;a class="reference external" href="https://github.com/southernprogrammer/SageTVRename"&gt;SageTV
Rename&lt;/a&gt;&lt;/p&gt;
</summary><category term="BeyondTV"></category><category term="BeyondTV Rename"></category><category term="SageTV"></category><category term="SageTV Rename"></category></entry><entry><title>Agile Development</title><link href="http://bryanprice.net/agile-development.html" rel="alternate"></link><published>2010-04-08T18:29:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2010-04-08:agile-development.html</id><summary type="html">&lt;p&gt;So the software company that I work for &lt;a class="reference external" href="http://www.3-gis.com"&gt;3-GIS&lt;/a&gt;
has decided to start to adopt some agile development practices. &amp;nbsp;This
document describes a little bit about why the waterfall process isn't
that great. &amp;nbsp;It's a primer for &amp;quot;The Daily Scrum&amp;quot; which prepares
developers for a &amp;quot;sprint&amp;quot; which is an iteration of work for the team.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.rallydev.com/documents/scrumprimer.pdf"&gt;http://www.rallydev.com/documents/scrumprimer.pdf&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>CCS Update</title><link href="http://bryanprice.net/ccs-update.html" rel="alternate"></link><published>2009-08-19T13:52:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2009-08-19:ccs-update.html</id><summary type="html">&lt;p&gt;You can now download the new CCS Software that should work for XP –
Windows 7 via &lt;a class="reference external" href="https://github.com/southernprogrammer/ccs/releases/tag/1.0"&gt;github&lt;/a&gt; Enjoy.&lt;/p&gt;
</summary><category term="CCS"></category></entry><entry><title>What is CCS?</title><link href="http://bryanprice.net/what-is-ccs.html" rel="alternate"></link><published>2009-08-19T13:35:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2009-08-19:what-is-ccs.html</id><summary type="html">&lt;p&gt;You may have heard about CCS in my blog post
&lt;a class="reference external" href="/ccs.html"&gt;here&lt;/a&gt;, but here’s a brief description anyway.
CCS allows teachers to block websites and programs on student computers
(both blacklists and whitelists) as well as perform other actions such
as remote desktop.&amp;nbsp; The teacher and student software can be found
&lt;a class="reference external" href="https://github.com/southernprogrammer/ccs"&gt;here&lt;/a&gt;.
The teacher software must be setup first. Then setup the student software on all student machines
using the same configuration.&lt;/p&gt;
</summary><category term="CCS"></category></entry><entry><title>CCS FAQ</title><link href="http://bryanprice.net/faq.html" rel="alternate"></link><published>2009-08-19T13:03:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2009-08-19:faq.html</id><summary type="html">&lt;div class="section" id="what-operating-systems-are-supported"&gt;
&lt;h2&gt;What operating systems are supported?&lt;/h2&gt;
&lt;p&gt;Windows XP - Windows 7.&amp;nbsp; This software is untested on 64 bit OS's.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="are-there-any-prerequisites"&gt;
&lt;h2&gt;Are there any prerequisites?&lt;/h2&gt;
&lt;p&gt;.Net Framework 3.5, Java Runtime Environment, and Bonjour.&amp;nbsp; Links are
provided in the readme and the installer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="is-ccs-secure"&gt;
&lt;h2&gt;Is CCS secure?&lt;/h2&gt;
&lt;p&gt;Yes, CCS is in face very secure.&amp;nbsp; Commands sent to student machines are
validated via RSA encryption so that the student machine is positive
that the source of the command is legitimate.&amp;nbsp; Additionally, students
cannot turn off the software (unless you give them administrative
privileges).&amp;nbsp; If a student kills one of the processes that runs as a
regular user, another process will respawn it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="do-the-machines-need-to-be-set-up-any-special-way"&gt;
&lt;h2&gt;Do the machines need to be set up any special way?&lt;/h2&gt;
&lt;p&gt;Yes, the teacher software should run on an administrative account and
the student software should run on a limited or standard account.
Furthermore Fast User Switching is not supported at this time and should
be cut off.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="are-there-any-known-issues"&gt;
&lt;h2&gt;Are there any known issues?&lt;/h2&gt;
&lt;p&gt;Yes, installing from network shares seems to cause some problems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="anything-else-i-need-to-know"&gt;
&lt;h2&gt;Anything else I need to know?&lt;/h2&gt;
&lt;p&gt;The CCSSUService (which runs as an administrator) does not start all
software required to run on the student's machine.&amp;nbsp; It will, however,
stop all of the software when it shuts down.&amp;nbsp; So when you log into the
administrator's account on a student machine, you can stop the service
to stop the software.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="CCS"></category></entry><entry><title>Subverting Vista UAC With a Service</title><link href="http://bryanprice.net/subverting-vista-uac-with-a-service.html" rel="alternate"></link><published>2009-08-17T20:19:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2009-08-17:subverting-vista-uac-with-a-service.html</id><summary type="html">&lt;p&gt;This is exactly what I was looking for, it took me forever to find it.
And so here it is: code to subvert vista uac with a service!
&lt;a class="reference external" href="http://www.codeproject.com/KB/vista-security/SubvertingVistaUAC.aspx?display=Print"&gt;http://www.codeproject.com/KB/vista-security/SubvertingVistaUAC.aspx?display=Print&lt;/a&gt;.
Please thank me later for giving you a link to this.&amp;nbsp; I needed this to
be able to lock the keyboard and mouse in my CCS project on standard
user accounts on vista.&amp;nbsp; The only thing.&amp;nbsp; I could have used this code a
week ago and saved myself a lot of coding.&lt;/p&gt;
&lt;p&gt;UPDATE: The Code does not work for XP, so you still have to find ways to
make it work for both.&amp;nbsp; So the design I made before is still a good way
to do things.&amp;nbsp; I just need to use this for the keyboard and mouse
blocker.&lt;/p&gt;
</summary><category term="CCS"></category><category term="code"></category><category term="codeproject"></category><category term="service"></category><category term="uac"></category><category term="vista"></category></entry><entry><title>CCS</title><link href="http://bryanprice.net/ccs.html" rel="alternate"></link><published>2009-07-31T18:24:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2009-07-31:ccs.html</id><summary type="html">&lt;p&gt;So, I've been working on my open source Classroom Control System this
month, and I've just started to write the installers.&amp;nbsp; If you are
familiar with NetOp's School6 software, you know how powerful a
classroom control system can be.&lt;/p&gt;
&lt;p&gt;My classroom control system will allow teachers to see what student
computers are on and apply actions to any of them.&amp;nbsp; Teachers can
rearrange the internal frames that represent the student computers and
save the layout as he / she sees fit (useful to easily tell what
computer you are controlling).&amp;nbsp; The teacher can remote control a
student's computer via the CCS's interface.&amp;nbsp; That particular function
uses the free program RealVNC.&amp;nbsp; Just think if the teacher's computer is
hooked to a projector.&amp;nbsp; The teacher can ask a student to perform a task
for the class, or they can answer the question that the student had for
the class.&amp;nbsp; If the room doesn't have a projector, the teacher can simply
use the Broadcast Screen function to broadcast his / her screen to any
or all of the student computers.&lt;/p&gt;
&lt;p&gt;But there's more.&amp;nbsp; The teacher can set a whitelist or blacklist for both
programs and websites and save the policies under his / her particular
profile.&amp;nbsp; You can also do things like Turn Off Monitor, Turn Off
Machine, Empty Recycle Bin, Mute Volume, Unmute Volume, and set an open
lab.&lt;/p&gt;
&lt;p&gt;I'll make sure to put up a link when I'm finally done.&lt;/p&gt;
</summary><category term="CCS"></category></entry><entry><title>My CCS Project Interface Working!!!</title><link href="http://bryanprice.net/my-ccs-project-interface-working.html" rel="alternate"></link><published>2009-06-25T21:16:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2009-06-25:my-ccs-project-interface-working.html</id><summary type="html">&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/FwrZyPHnbrI" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;I'm really proud of this!&lt;/p&gt;
</summary><category term="CCS"></category><category term="Video"></category></entry><entry><title>Gravatars</title><link href="http://bryanprice.net/gravatars.html" rel="alternate"></link><published>2009-06-11T11:16:00-05:00</published><author><name>bryan</name></author><id>tag:bryanprice.net,2009-06-11:gravatars.html</id><summary type="html">&lt;p&gt;Wow, I never knew about Gravatars until just now.&amp;nbsp; Everyone needs to go
to Gravatar.com and register an avatar that can be used across the web
on many websites (including this one).&amp;nbsp; The avatar is associated with
your email address and if a website uses Gravatar it just checks to see
if you have one setup on Gravatar.com.&amp;nbsp; If you look at comments on this
site you will now see avatars.&amp;nbsp; This is a really amazing idea!&lt;/p&gt;
&lt;p&gt;Now if you have a wordpress blog and you want to incorporate Gravatars
into your template, I suggest you use this line of code in your comment
template.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;get_avatar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$id_or_email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;96&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;path_to_url&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace $id_or_email with $comment (this is what I used) or with
get_the_author_id() (it varies from theme to theme), replace XX with
the size you want the images (I use 50 pixels), and replace
'&amp;lt;path_to_url&amp;gt;' with the absolute location of a custom default avatar
(in the case that the commenter didn't have a gravatar set).&amp;nbsp; If you
want to use the default avatar set in the Wordpress settings
(Settings-&amp;gt;Discussion) you need to remove the default argument
completely.&lt;/p&gt;
&lt;p&gt;Hope this was educational, and remember to sign up for a Gravatar!&lt;/p&gt;
</summary><category term="avatar"></category><category term="webaccount"></category><category term="blogging"></category></entry></feed>